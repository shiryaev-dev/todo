{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7766d782.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({ toDo, done }) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    );\n};\n\nexport default AppHeader;","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, { Component } from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: ''\n    }\n\n    onSearchChange = (e) => {\n        const term = e.target.value\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    }\n\n    render() {\n        return (\n            <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\"\n                onChange={this.onSearchChange} \n                value={this.state.term}/>\n        )\n    };\n};","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;","import React, { Component } from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    // onMarkImportant = () => {\n    //     this.setState((state) => {\n    //         return {\n    //             important: !state.important\n    //         }\n    //     })\n    // }\n\n    // onLabelClick = () => {\n    //     this.setState(({done}) => {\n    //         return {\n    //             done: !done\n    //         }\n    //     })\n    // }\n\n    render() {\n        const { label, onDeleted, onToggleImportant, onToggleDone, done, important  } = this.props;\n\n        let classNames = 'todo-list-item'\n        if (done) {\n            classNames += ' done';\n        }\n        if(important) {\n            classNames += ' important';\n        }\n\n        return (\n            <span className={classNames}>\n                <span\n                    className=\"todo-list-item-label\"\n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button type=\"button\"\n                    className=\"btn btn-outline-success btn-sm float-right\"\n                    onClick={onToggleImportant}>\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\">\n                    <i className=\"fa fa-trash-o\" \n                    onClick={onDeleted}/>\n                </button>\n            </span>\n        );\n    }\n}\n\n","import TodoList from './todo-list';\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n    const elements = todos.map(item => {\n//рест оператором собираем новый объект, который не включает id\nconst { id, ...itemProps } = item\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem { ...itemProps }\n                onDeleted={() => onDeleted(id)}\n                onToggleImportant={() => onToggleImportant(id)}\n                onToggleDone={() => onToggleDone(id)}/>\n            </li>\n        )\n    })\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' }\n  ]\n\n  render() {\n\n    const { filter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n      return (\n        <button type=\"button\"\n          className={`btn ${clazz}`}\n          key={name}\n          onClick={() => onFilterChange(name)}>{label}\n        </button>\n      )\n    })\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: '',\n    }\n    \n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        })\n    }\n    \n    render() {\n        return (\n            <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n                <input type=\"text\"\n                    className=\"form-control\"\n                    onChange={this.onLabelChange}\n                    placeholder=\"What needs to be done\" \n                    value={this.state.label}/>\n                <button className=\"btn btn-outline-secondary\">\n                    Add\n                </button>\n            </form >\n        )\n    }\n}","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        term: '',\n        filter: 'all',\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ todoData }) => {\n            const idx = todoData.findIndex(el => el.id === id)\n            const before = todoData.slice(0, idx)\n            const after = todoData.slice(idx + 1)\n            const newArr = [...before, ...after]\n            return {\n                todoData: newArr\n            }\n        })\n    }\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++,\n        }\n    }\n\n    addItem = (text) => {\n\n        const newItem = this.createTodoItem(text)\n\n        this.setState(({ todoData }) => {\n            const newArray = [\n                ...todoData,\n                newItem\n            ]\n            return {\n                todoData: newArray\n            }\n        })\n    }\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex(el => el.id === id)\n        const oldItem = arr[idx];\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        })\n    }\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > - 1\n        });\n    }\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    }\n\n    filter(items, filter) {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n        const { todoData, term, filter } = this.state;\n        const visibleItems = this.filter(this.search(todoData, term), filter)\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\" >\n                <AppHeader toDo={todoCount} done={doneCount} />\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        onSearchChange={this.onSearchChange} />\n                    <ItemStatusFilter \n                    filter={filter} \n                    onFilterChange={this.onFilterChange}/>\n                </div>\n                <TodoList todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone} />\n                <ItemAddForm onItemAdded={this.addItem} />\n            </div>\n        );\n    }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}